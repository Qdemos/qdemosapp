<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.cusl.ull.qdemos" >

    <uses-permission android:name="com.iot.dephisit.permission.MAPS_RECEIVE" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.CHANGE_NETWORK_STATE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="com.google.android.providers.gsf.permission.READ_GSERVICES" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission
        android:name="android.permission.ACCESS_WIFI_STATE"
        android:required="true" />
    <uses-permission
        android:name="android.permission.CHANGE_WIFI_STATE"
        android:required="true" />
    <uses-permission android:name="android.permission.CHANGE_WIFI_MULTICAST_STATE" />

    <uses-permission android:name="android.permission.GET_ACCOUNTS" />

    <!-- Keeps the processor from sleeping when a message is received. -->
    <uses-permission android:name="android.permission.WAKE_LOCK" />

    <permission
        android:name="com.iot.dephisit.permission.C2D_MESSAGE"
        android:protectionLevel="signature" />

    <uses-permission android:name="com.iot.dephisit.permission.C2D_MESSAGE" />

    <!-- This app has permission to register and receive data message. -->
    <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />

    <application
        android:allowBackup="true"
        android:icon="@drawable/ic_launcher"
        android:label="@string/app_name"
        android:theme="@style/Theme.Qdemos" >
        <activity
            android:name="com.cusl.ull.qdemos.Inicio"
            android:configChanges="orientation"
            android:screenOrientation="portrait"
            android:label="@string/app_name" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity android:name="com.facebook.LoginActivity" />

        <meta-data
            android:name="com.facebook.sdk.ApplicationId"
            android:value="@string/app_id_facebook" />

        <meta-data
            android:name="com.google.android.gms.version"
            android:value="@integer/google_play_services_version" />

        <meta-data
            android:name="com.google.android.maps.v2.API_KEY"
            android:value="@string/app_key_play_services"/>

        <activity
            android:name="com.cusl.ull.qdemos.Home"
            android:configChanges="orientation"
            android:screenOrientation="portrait"
            android:label="@string/inicio" >
        </activity>
        <activity
            android:name="com.cusl.ull.qdemos.Logout"
            android:configChanges="orientation"
            android:screenOrientation="portrait"
            android:label="@string/logout" >
        </activity>
        <activity
            android:name="com.cusl.ull.qdemos.Qdada"
            android:configChanges="orientation"
            android:screenOrientation="portrait"
            android:windowSoftInputMode="adjustResize"
            android:label="@string/title_activity_qdada" >
        </activity>

        <activity android:name="com.cusl.ull.qdemos.fragments.edicion.PickFriendsFragmentActivity"
            android:configChanges="orientation"
            android:screenOrientation="portrait"
            android:label="@string/title_activity_invitados">
        </activity>

        <!--
          WakefulBroadcastReceiver that will receive intents from GCM
          services and hand them to the custom IntentService.

          The com.google.android.c2dm.permission.SEND permission is necessary
          so only GCM services can send data messages for the app.
        -->
        <receiver
            android:name=".GcmBroadcastReceiver"
            android:permission="com.google.android.c2dm.permission.SEND" >
            <intent-filter>
                <action android:name="com.google.android.c2dm.intent.RECEIVE" />
                <category android:name="com.example.gcm" />
            </intent-filter>
        </receiver>
        <service android:name=".GCMIntentService" />
    </application>

    <uses-feature android:glEsVersion="0x00020000" android:required="true"/>

</manifest>
